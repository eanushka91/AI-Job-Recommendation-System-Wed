name: CI Pipeline

on:
  push:
    branches: [ main ] # Or your default branch (e.g., master)
  pull_request:
    branches: [ main ] # Or your default branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x] # You can specify other versions too, like [16.x, 18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm' # Or 'yarn' if you use yarn

    - name: Install dependencies
      run: npm install # Or yarn install

    - name: Run linters
      run: npm run lint

    - name: Run tests
      run: npm test # You can add --coverage here if you want coverage reports generated

    - name: Build project
      run: npm run build


  build-and-push-docker-image:
    needs: build-and-test # Ensure this job runs only after build-and-test succeeds
    if: github.ref == 'refs/heads/main' # Only run on pushes to the main branch
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required to push to GitHub Packages / GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is automatically available

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # github.repository is OWNER/REPO_NAME

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }} # Use tags generated by metadata-action
          labels: ${{ steps.meta.outputs.labels }} # Use labels generated by metadata-action
